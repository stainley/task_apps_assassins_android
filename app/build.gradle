plugins {
    id 'com.android.application'
    id "io.gitlab.arturbosch.detekt" version "1.22.0"
    id 'androidx.navigation.safeargs'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.google.gms.google-services'
}

android {
    namespace 'ca.app.assasins.taskappsassassinsandroid'
    compileSdk 33

    defaultConfig {
        applicationId "ca.app.assasins.taskappsassassinsandroid"
        minSdk 25
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        viewBinding true
    }

    lint {
        // Turns off checks for the issue IDs you specify.
        disable 'TypographyFractions','TypographyQuotes'
        // Turns on checks for the issue IDs you specify. These checks are in
        // addition to the default lint checks.
        enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
        // To enable checks for only a subset of issue IDs and ignore all others,
        // list the issue IDs with the 'check' property instead. This property overrides
        // any issue IDs you enable or disable using the properties above.
        checkOnly 'NewApi', 'InlinedApi'
        // If set to true, turns off analysis progress reporting by lint.
        quiet true
        // If set to true (default), stops the build if errors are found.
        abortOnError false
        // If set to true, lint only reports errors.
        ignoreWarnings true
        // If set to true, lint also checks all dependencies as part of its analysis.
        // Recommended for projects consisting of an app with library dependencies.
        checkDependencies false
    }

    android {
        lint {
            baseline = file("lint-baseline.xml")
        }
    }


    testOptions {
        unitTests.includeAndroidResources = true
    }
}





dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'androidx.arch.core:core-testing:2.1.0'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.google.firebase:firebase-auth:21.1.0'
    implementation 'com.google.android.gms:play-services-auth:20.4.1'
    implementation 'com.google.firebase:firebase-database:20.1.0'

    testImplementation 'org.robolectric:robolectric:4.9.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // Android Room Database
    annotationProcessor 'androidx.room:room-compiler:2.5.0'
    implementation 'androidx.room:room-common:2.5.0'
    implementation 'androidx.room:room-runtime:2.5.0'
    implementation 'androidx.room:room-testing:2.5.0'
}